plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'maven-publish'
    id 'com.google.cloud.tools.jib' version '3.2.0'
}

group = 'com.qticket'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()

    maven {
        url = uri("https://maven.pkg.github.com/QueueTicket/common")
        credentials {
            username = "QueueTicket"
            password = System.getenv("GITHUB_TOKEN")
        }
    }
}


ext {
    set('springCloudVersion', "2023.0.3")
}

dependencies {
	implementation 'com.qticket:common:0.0.12'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'io.micrometer:micrometer-registry-prometheus'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'io.netty:netty-resolver-dns-native-macos:4.1.94.Final:osx-aarch_64'

	implementation 'org.springframework.kafka:spring-kafka'

	// p6spy 추가
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0'
	// QueryDSL 추가
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'

	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'


	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	testImplementation 'com.github.codemonstur:embedded-redis:1.0.0'
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.springframework.security:spring-security-test'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

jib {
	from {
		image = "openjdk:17-jdk-slim"
	platforms {
		platform {
			architecture = "arm64"
			os = "linux"
		}
//			platform {
//				architecture = "amd64"
//				os = "linux"
//			}
	}
	}
	to {
		image = "shoon95/${project.name}:latest"
	}
	container {
		mainClass = "com.qticket.concert.ConcertApplication"
		creationTime = "USE_CURRENT_TIMESTAMP"
	}
}
